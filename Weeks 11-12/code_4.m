%%  Solves Poisson's equation in a square with Dirichlet boundary%  conditions:%%     u_xx + u_yy = f(x,y) ,  0 < x,y < 1%%     u(x,0) = g(x,0),  u(x,1) = g(x,1),  u(0,y) = g(0,y),  u(1,y) = g(1,y).%%  Uses a centered finite difference method.%  I have set f(x,y) = x^2 + y^2 and g(x,y) = 1.f = inline('-pi * sin(pi*(x+1)).*(pi*y+2*sin(pi*y)+2*pi*y.*cos(pi*y))','x','y');[X, Y] = meshgrid(-0.1:0.01:0.1,0:0.01:1);% surf(X, Y,f(X, Y))  %This plots f(x,y) as a function of x and y.n = 50;h = 1/n;N = (n)*(n-1);g = zeros(n-1, 1); % middle boundary pointserror = 1;for iteration=1:10% Left region:A = sparse(zeros(N,N));b = zeros(N,1);for j=1:n-1,  yj = j*h;  for i=1:n,    xi = i*h + h - 1;    k = i + (j-1)*(n);    A(k,k) = -4/h^2;    if i > 1, A(k,k-1) = 1/h^2; end;       % Coupling to point on left.    if i < n, A(k,k+1) = 1/h^2; end;     % Coupling to point on right.    if j > 1, A(k,k-(n)) = 1/h^2; end;   % Coupling to point below.    if j < n-1, A(k,k+(n)) = 1/h^2; end; % Coupling to point above.    b(k) = f(xi,yj);    if i==n-1, b(k) = b(k) - g(j)/h^2; end; % Bndy point on right.  end;end;u_left = A\b;ugrid_left = reshape(u_left,n-1,n);error = norm(ugrid_left(:, n) - g);g = ugrid_left(:,n);% Right region:A = sparse(zeros(N,N));b = zeros(N,1);for j=1:n-1,  yj = j*h;  for i=1:n,    xi = i*h - h;    k = i + (j-1)*(n);    A(k,k) = -4/h^2;    if i > 1, A(k,k-1) = 1/h^2; end;       % Coupling to point on left.    if i < n, A(k,k+1) = 1/h^2; end;     % Coupling to point on right.    if j > 1, A(k,k-(n)) = 1/h^2; end;   % Coupling to point below.    if j < n-1, A(k,k+(n)) = 1/h^2; end; % Coupling to point above.    b(k) = f(xi,yj);    if i==2, b(k) = b(k) - g(j)/h^2; end;   % Bndy point on left.  end;end;u_right = A\b;ugrid_right = reshape(u_right,n-1,n);error = norm(ugrid_right(:, 1) - g);g = ugrid_right(:,1);errorend;surf([-1+h:h:0]', [h:h:1-h]', ugrid_left); hold onsurf([0:h:1-h]', [h:h:1-h]', ugrid_right);